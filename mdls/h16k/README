### DESIGNS ###

h16k_ver101 - Changed the order of the status bits to coincide with the
	      HPC code.  The ordering is now 3. BLANK 2. SR1 1. SR0 0. CAL
h16k_ver104 - ?
h16k_ver105 - Test case. Similar to ver107, only differences are in the amount of delay on the paths of
	      data and we and trig of the rshpout snap block. Corresponding bof files are h16k_ver105_*.bof.
	      First compilation has fixed delay amount (probably wrong), second compilation features
	      programmable delay length (see model file). 
h16k_ver107 - Test case. Trying to make sensible capturing scheme for reshaper output 
	      (focus on the part arond rshpout). Still a work i nprogress. Corresponding bof files
	      are h16k_ver107_01_*.bof (re-naming issue...)

### COMPILING ###

h16k_verXXX.mdl uses the "Black Boxing" trick to improve the development efficiency. The technique is described in the Casper Memo No.28(http://casper.berkeley.edu/wiki/images/a/a4/Black_box_memo.pdf).

Since some of the steps (Extract entity, place pcores in the design, etc) have been done already, so to compile h16k_ver100.mdl, there's no need to run through every steps described in the memo.
To compile h16k_verXXX.mdl:
0) Enter the directory vegas_devel/newmdls/h16k
1) Open fftwbr_core.mdl
2) Double click on the System Generator block, click the "Generate" button. Wait for the generation to complete.
3) Open pfbfirr_core.mdl
4) Double click on the System Generator block, click the "Generate" button. Wait for the generation to complete.
5) Open h16k_ver100.mdl
6) Compile it as with other regular mdl files.
